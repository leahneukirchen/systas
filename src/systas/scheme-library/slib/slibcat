;"slibcat" SLIB catalog for systas-scheme<version unspecified>.        -*-scheme-*-
;
; DO NOT EDIT THIS FILE -- it is automagically generated

(
 (schelog . "/home/lord/src/hackerlab/scheme-library/slibschelog/schelog")
 (portable-scheme-debugger . "/home/lord/src/hackerlab/scheme-library/slibpsd/psd-slib")
 (jfilter . "/home/lord/src/hackerlab/scheme-library/slibjfilter/jfilter")
 (rev4-optional-procedures . "/home/lord/src/hackerlab/scheme-library/slib/sc4opt")
 (rev2-procedures . "/home/lord/src/hackerlab/scheme-library/slib/sc2")
 (multiarg/and- . "/home/lord/src/hackerlab/scheme-library/slib/mularg")
 (multiarg-apply . "/home/lord/src/hackerlab/scheme-library/slib/mulapply")
 (rationalize . "/home/lord/src/hackerlab/scheme-library/slib/ratize")
 (transcript . "/home/lord/src/hackerlab/scheme-library/slib/trnscrpt")
 (with-file . "/home/lord/src/hackerlab/scheme-library/slib/withfile")
 (dynamic-wind . "/home/lord/src/hackerlab/scheme-library/slib/dynwind")
 (dynamic . "/home/lord/src/hackerlab/scheme-library/slib/dynamic")
 (fluid-let defmacro . "/home/lord/src/hackerlab/scheme-library/slib/fluidlet")
 (alist . "/home/lord/src/hackerlab/scheme-library/slib/alist")
 (hash . "/home/lord/src/hackerlab/scheme-library/slib/hash")
 (sierpinski . "/home/lord/src/hackerlab/scheme-library/slib/sierpinski")
 (soundex . "/home/lord/src/hackerlab/scheme-library/slib/soundex")
 (hash-table . "/home/lord/src/hackerlab/scheme-library/slib/hashtab")
 (logical . "/home/lord/src/hackerlab/scheme-library/slib/logical")
 (random . "/home/lord/src/hackerlab/scheme-library/slib/random")
 (random-inexact . "/home/lord/src/hackerlab/scheme-library/slib/randinex")
 (modular . "/home/lord/src/hackerlab/scheme-library/slib/modular")
 (factor . "/home/lord/src/hackerlab/scheme-library/slib/factor")
 (primes . factor)
 (charplot . "/home/lord/src/hackerlab/scheme-library/slib/charplot")
 (sort . "/home/lord/src/hackerlab/scheme-library/slib/sort")
 (tsort . topological-sort)
 (topological-sort . "/home/lord/src/hackerlab/scheme-library/slib/tsort")
 (common-list-functions . "/home/lord/src/hackerlab/scheme-library/slib/comlist")
 (tree . "/home/lord/src/hackerlab/scheme-library/slib/tree")
 (coerce . "/home/lord/src/hackerlab/scheme-library/slib/coerce")
 (format . "/home/lord/src/hackerlab/scheme-library/slib/format")
 (generic-write . "/home/lord/src/hackerlab/scheme-library/slib/genwrite")
 (pretty-print . "/home/lord/src/hackerlab/scheme-library/slib/pp")
 (pprint-file . "/home/lord/src/hackerlab/scheme-library/slib/ppfile")
 (object->string . "/home/lord/src/hackerlab/scheme-library/slib/obj2str")
 (string-case . "/home/lord/src/hackerlab/scheme-library/slib/strcase")
 (stdio . "/home/lord/src/hackerlab/scheme-library/slib/stdio")
 (printf . "/home/lord/src/hackerlab/scheme-library/slib/printf")
 (scanf . "/home/lord/src/hackerlab/scheme-library/slib/scanf")
 (line-i/o . "/home/lord/src/hackerlab/scheme-library/slib/lineio")
 (string-port . "/home/lord/src/hackerlab/scheme-library/slib/strport")
 (getopt . "/home/lord/src/hackerlab/scheme-library/slib/getopt")
 (debug . "/home/lord/src/hackerlab/scheme-library/slib/debug")
 (qp . "/home/lord/src/hackerlab/scheme-library/slib/qp")
 (break defmacro . "/home/lord/src/hackerlab/scheme-library/slib/break")
 (trace defmacro . "/home/lord/src/hackerlab/scheme-library/slib/trace")
 (eval . "/home/lord/src/hackerlab/scheme-library/slib/eval")
 (record . "/home/lord/src/hackerlab/scheme-library/slib/record")
 (promise . "/home/lord/src/hackerlab/scheme-library/slib/promise")
 (synchk . "/home/lord/src/hackerlab/scheme-library/slib/synchk")
 (defmacroexpand . "/home/lord/src/hackerlab/scheme-library/slib/defmacex")
 (macro-by-example defmacro . "/home/lord/src/hackerlab/scheme-library/slib/mbe")
 (syntax-case . "/home/lord/src/hackerlab/scheme-library/slib/scainit")
 (syntactic-closures . "/home/lord/src/hackerlab/scheme-library/slib/scmacro")
 (macros-that-work . "/home/lord/src/hackerlab/scheme-library/slib/macwork")
 (macro . macro-by-example)
 (object . "/home/lord/src/hackerlab/scheme-library/slib/object")
 (yasos macro . "/home/lord/src/hackerlab/scheme-library/slib/yasyn")
 (oop . yasos)
 (collect macro . "/home/lord/src/hackerlab/scheme-library/slib/collect")
 (structure syntax-case . "/home/lord/src/hackerlab/scheme-library/slib/structure")
 (values . "/home/lord/src/hackerlab/scheme-library/slib/values")
 (queue . "/home/lord/src/hackerlab/scheme-library/slib/queue")
 (priority-queue . "/home/lord/src/hackerlab/scheme-library/slib/priorque")
 (array . "/home/lord/src/hackerlab/scheme-library/slib/array")
 (array-for-each . "/home/lord/src/hackerlab/scheme-library/slib/arraymap")
 (repl . "/home/lord/src/hackerlab/scheme-library/slib/repl")
 (process . "/home/lord/src/hackerlab/scheme-library/slib/process")
 (chapter-order . "/home/lord/src/hackerlab/scheme-library/slib/chap")
 (posix-time . "/home/lord/src/hackerlab/scheme-library/slib/psxtime")
 (common-lisp-time . "/home/lord/src/hackerlab/scheme-library/slib/cltime")
 (time-zone . "/home/lord/src/hackerlab/scheme-library/slib/timezone")
 (relational-database . "/home/lord/src/hackerlab/scheme-library/slib/rdms")
 (database-utilities . "/home/lord/src/hackerlab/scheme-library/slib/dbutil")
 (database-browse . "/home/lord/src/hackerlab/scheme-library/slib/dbrowse")
 (html-form . "/home/lord/src/hackerlab/scheme-library/slib/htmlform")
 (alist-table . "/home/lord/src/hackerlab/scheme-library/slib/alistab")
 (parameters . "/home/lord/src/hackerlab/scheme-library/slib/paramlst")
 (getopt-parameters . "/home/lord/src/hackerlab/scheme-library/slib/getparam")
 (read-command . "/home/lord/src/hackerlab/scheme-library/slib/comparse")
 (batch . "/home/lord/src/hackerlab/scheme-library/slib/batch")
 (glob . "/home/lord/src/hackerlab/scheme-library/slib/glob")
 (filename . glob)
 (make-crc . "/home/lord/src/hackerlab/scheme-library/slib/makcrc")
 (fft . "/home/lord/src/hackerlab/scheme-library/slib/fft")
 (wt-tree . "/home/lord/src/hackerlab/scheme-library/slib/wttree")
 (string-search . "/home/lord/src/hackerlab/scheme-library/slib/strsrch")
 (root . "/home/lord/src/hackerlab/scheme-library/slib/root")
 (minimize . "/home/lord/src/hackerlab/scheme-library/slib/minimize")
 (precedence-parse . "/home/lord/src/hackerlab/scheme-library/slib/prec")
 (parse . precedence-parse)
 (commutative-ring . "/home/lord/src/hackerlab/scheme-library/slib/cring")
 (self-set . "/home/lord/src/hackerlab/scheme-library/slib/selfset")
 (determinant . "/home/lord/src/hackerlab/scheme-library/slib/determ")
 (byte . "/home/lord/src/hackerlab/scheme-library/slib/byte")
 (tzfile . "/home/lord/src/hackerlab/scheme-library/slib/tzfile")
 (schmooz . "/home/lord/src/hackerlab/scheme-library/slib/schmooz")
 (net-clients . "/home/lord/src/hackerlab/scheme-library/slib/nclients")
 (db->html . "/home/lord/src/hackerlab/scheme-library/slib/db2html")
 (http . "/home/lord/src/hackerlab/scheme-library/slib/http-cgi")
 (cgi . http)
 (uri . "/home/lord/src/hackerlab/scheme-library/slib/uri")
 (uniform-resource-identifier . uri)
 (pnm . "/home/lord/src/hackerlab/scheme-library/slib/pnm")
 (metric-units . "/home/lord/src/hackerlab/scheme-library/slib/simetrix")
 (diff . "/home/lord/src/hackerlab/scheme-library/slib/differ")
 (srfi-0 . srfi)
 (srfi defmacro . "/home/lord/src/hackerlab/scheme-library/slib/srfi")
 (srfi-1 . "/home/lord/src/hackerlab/scheme-library/slib/srfi-1")
 (new-catalog . "/home/lord/src/hackerlab/scheme-library/slib/mklibcat")
 (*SLIB-VERSION* . "2d2")
)
